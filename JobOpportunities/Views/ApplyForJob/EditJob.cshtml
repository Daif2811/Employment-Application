@model JobOpportunities.Models.ApplyForJob

@{
    ViewBag.Title = "EditJob";
}

<h2>Edit Job</h2>


@using (Html.BeginForm("EditJob", "ApplyForJob", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ApplyForJob</h4>
        

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.JobId)
        @Html.HiddenFor(model => model.UserId)




        <div class="form-group">
            @Html.LabelFor(model => model.Resume, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (string.IsNullOrWhiteSpace(Model.Resume))
                {
                    <input type="file" name="upload" />
                }
                else
                {
                    <embed src="~/Images/CV/@Html.DisplayFor(model => model.Resume)" class="thumbnail" />
                    <input type="file" name="upload" />
                }
                @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.ApplyDate
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobId, "Job Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.Job.JobTitle
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.User.UserName
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "GetJobsByUser")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

